package com.payneteasy.apiservlet.problem;

import java.util.List;
import java.util.Map;

public class ProblemDetails {

    /**
     *  A URI reference [RFC3986] that identifies the
     *  problem type.  This specification encourages that, when
     *  dereferenced, it provide human-readable documentation for the
     *  problem type (e.g., using HTML [W3C.REC-html5-20141028]).  When
     *  this member is not present, its value is assumed to be
     *  "about:blank".
     */
    private final String type;

    /**
     *  A short, human-readable summary of the problem
     *  type.  It SHOULD NOT change from occurrence to occurrence of the
     *  problem, except for purposes of localization (e.g., using
     *  proactive content negotiation; see [RFC7231], Section 3.4).
     */
    private final String title;

    /**
     *  The HTTP status code ([RFC7231], Section 6)
     *  generated by the origin server for this occurrence of the problem.
     */
    private final int    status;

    /**
     * A human-readable explanation specific to this
     * occurrence of the problem
     */
    private final String detail;

    /**
     * A URI reference that identifies the specific
     *       occurrence of the problem.  It may or may not yield further
     *       information if dereferenced.
     *
     * Example: /account/12345/msgs/abc
     */
    private final String instance;

    private final Map<String, String> context;

    private final List<ProblemDetails> subproblems;

    public ProblemDetails(String type, String title, int aStatus, String detail, String aInstance, Map<String, String> aContext, List<ProblemDetails> subproblems) {
        this.type        = type;
        this.title       = title;
        this.detail      = detail;
        this.subproblems = subproblems;
        status = aStatus;
        instance = aInstance;
        context = aContext;
    }

    public String getType() {
        return type;
    }

    public String getTitle() {
        return title;
    }

    public String getDetail() {
        return detail;
    }

    public List<ProblemDetails> getSubproblems() {
        return subproblems;
    }


}
